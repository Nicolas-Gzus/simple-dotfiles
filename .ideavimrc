source ~/.vim/settings.vim
source ~/.vim/keymap.vim

let mapleader=" "

" idea settings
set ideajoin
set idearefactormode=keep

" plugins: {{{

set argtextobj
set easymotion
set commentary
set NERDTree
set surround
set textobj-indent
set vim-paragraph-motion

" }}}

" plugins settings (NERDTree)
map <leader>hh :NERDTree<cr>
map <leader>ht :NERDTreeToggle<cr>

" source .ideavimrc
nnoremap \v :source ~/.ideavimrc<cr>

" project navigation
map <leader>hf <Action>(SelectInProjectView)

" window management
map <leader>qq <Action>(CloseEditor)
map <leader>qa <Action>(CloseAllEditors)
map <leader>qo <Action>(CloseAllEditorsButActive)

" tab navigation

" navigation: {{{

nnoremap <a-h> gT
nnoremap <a-l> gt

map <leader>ip <Action>(ParameterInfo)
map <leader>iu <Action>(ShowUsages)
map <leader>ii <Action>(GotoImplementation)
map <leader>ge <Action>(ReSharperGotoNextErrorInSolution)

map <a-j> <Action>(MoveStatementDown)
map <a-k> <Action>(MoveStatementUp)

nnoremap [q :action PreviousOccurence<cr>
nnoremap ]q :action NextOccurence<cr>

map <leader>s <Action>(SaveAll)
map <leader>pm <Action>(PasteMultiple)
map <leader>pc "+p

nnoremap gcc <Action>(CommentByLineComment)
map <leader>rm <Action>(Move)
map <leader>cf <Action>(ReformatCode)
map <leader>rr <Action>(RenameElement)
map <leader>xi <Action>(OptimizeImports)
map <leader>ca <Action>(ShowIntentionActions)

" }}}

" code generation
map <leader>ce <Action>(NewElement)
map <leader>ce <Action>(Generate)
map <leader>cx <Action>(ExtractMethod)

" toggle distraction free mode
map <leader>z <Action>(ToggleDistractionFreeMode)

" debugging
map <leader>dd <Action>(Debug)
map <leader>dl <Action>(ToggleLineBreakpoint)
map <leader>ds <Action>(Stop)
